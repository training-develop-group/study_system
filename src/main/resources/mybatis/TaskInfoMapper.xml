<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.study_system.dao.TaskInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.study_system.model.TaskInfo" >
    <id column="task_id" property="taskId" jdbcType="BIGINT" />
    <result column="res_id" property="resId" jdbcType="BIGINT" />
    <result column="paper_id" property="paperId" jdbcType="BIGINT" />
    <result column="task_type" property="taskType" jdbcType="INTEGER" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="c_time" property="cTime" jdbcType="TIMESTAMP" />
    <result column="m_time" property="mTime" jdbcType="TIMESTAMP" />
    <result column="c_user" property="cUser" jdbcType="VARCHAR" />
    <result column="m_user" property="mUser" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.study_system.model.TaskInfo" extends="BaseResultMap" >
    <result column="task_remark" property="taskRemark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    task_id, res_id, paper_id, task_type, task_name, STATUS, start_time, end_time, c_time, 
    m_time, c_user, m_user
  </sql>
  <sql id="Blob_Column_List"  >
    task_remark
  </sql>
 
  <update id="updateByIdTaskName" parameterType="com.example.study_system.model.TaskInfo">
  update task_info set task_name = #{taskName,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <select id="selectTaskAll" resultMap="ResultMapWithBLOBs" parameterType="String">
  select 
   <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_info a
    where 
    1=1 
    <if test="taskName!=''||taskName!=null">
    and a.task_name like '%${taskName}%'
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_info
    where task_id = #{taskId,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from task_info
  </select>
  
  <select id="selectTaskCount" resultType="Integer">
   select  count(0) from task_info
   
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from task_info
    where task_id = #{taskId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.study_system.model.TaskInfo"  keyColumn="task_id" keyProperty="taskId" useGeneratedKeys="true">
    insert into task_info (task_id, res_id, paper_id, 
      task_type, task_name, STATUS, 
      start_time, end_time, c_time, 
      m_time, c_user, m_user, 
      task_remark)
    values (null, #{resId,jdbcType=BIGINT}, #{paperId,jdbcType=BIGINT}, 
      #{taskType,jdbcType=INTEGER}, #{taskName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, now(), now(), 'a','a',
      #{taskRemark,jdbcType=LONGVARCHAR})
      
  </insert>
  <insert id="insertSelective" parameterType="com.example.study_system.model.TaskInfo" >
    insert into task_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="resId != null" >
        res_id,
      </if>
      <if test="paperId != null" >
        paper_id,
      </if>
      <if test="taskType != null" >
        task_type,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="cTime != null" >
        c_time,
      </if>
      <if test="mTime != null" >
        m_time,
      </if>
      <if test="cUser != null" >
        c_user,
      </if>
      <if test="mUser != null" >
        m_user,
      </if>
      <if test="taskRemark != null" >
        task_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="resId != null" >
        #{resId,jdbcType=BIGINT},
      </if>
      <if test="paperId != null" >
        #{paperId,jdbcType=BIGINT},
      </if>	
      <if test="taskType != null" >
        #{taskType,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mTime != null" >
        #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null" >
        #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="mUser != null" >
        #{mUser,jdbcType=VARCHAR},
      </if>
      <if test="taskRemark != null" >
        #{taskRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.study_system.model.TaskInfo" >
    update task_info
    <set >
      <if test="resId != null" >
        res_id = #{resId,jdbcType=BIGINT},
      </if>
      <if test="paperId != null" >
        paper_id = #{paperId,jdbcType=BIGINT},
      </if>
      <if test="taskType != null" >
        task_type = #{taskType,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cTime != null" >
        c_time = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="mTime != null" >
        m_time = #{mTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cUser != null" >
        c_user = #{cUser,jdbcType=VARCHAR},
      </if>
      <if test="mUser != null" >
        m_user = #{mUser,jdbcType=VARCHAR},
      </if>
      <if test="taskRemark != null" >
        task_remark = #{taskRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.study_system.model.TaskInfo" >
    update task_info
    set res_id = #{resId,jdbcType=BIGINT},
      paper_id = #{paperId,jdbcType=BIGINT},
      task_type = #{taskType,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      c_time = #{cTime,jdbcType=TIMESTAMP},
      m_time = #{mTime,jdbcType=TIMESTAMP},
      c_user = #{cUser,jdbcType=VARCHAR},
      m_user = #{mUser,jdbcType=VARCHAR},
      task_remark = #{taskRemark,jdbcType=LONGVARCHAR}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.study_system.model.TaskInfo" >
    update task_info
    set res_id = #{resId,jdbcType=BIGINT},
      paper_id = #{paperId,jdbcType=BIGINT},
      task_type = #{taskType,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      c_time = #{cTime,jdbcType=TIMESTAMP},
      m_time = #{mTime,jdbcType=TIMESTAMP},
      c_user = #{cUser,jdbcType=VARCHAR},
      m_user = #{mUser,jdbcType=VARCHAR}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
</mapper>