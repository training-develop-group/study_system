<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.study_system.dao.UserActionLogMapper" >
  <resultMap id="BaseResultMap" type="com.example.study_system.model.UserActionLog" >
    <id column="ref" property="ref" jdbcType="BIGINT" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="c_time" property="cTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.study_system.model.UserActionLog" extends="BaseResultMap" >
    <result column="params" property="params" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ref, TYPE, url, STATUS, remark, c_time, user_id
  </sql>
  <sql id="Blob_Column_List" >
    params
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_action_log
    where ref = #{ref,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_action_log
    where ref = #{ref,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.study_system.model.UserActionLog" >
    insert into user_action_log (ref, TYPE, url, 
      STATUS, remark, c_time, 
      user_id, params)
    values (#{ref,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{cTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=VARCHAR}, #{params,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.study_system.model.UserActionLog" >
    insert into user_action_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ref != null" >
        ref,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="cTime != null" >
        c_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="params != null" >
        params,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ref != null" >
        #{ref,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        #{params,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.study_system.model.UserActionLog" >
    update user_action_log
    <set >
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="cTime != null" >
        c_time = #{cTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ref = #{ref,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.study_system.model.UserActionLog" >
    update user_action_log
    set TYPE = #{type,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      c_time = #{cTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR},
      params = #{params,jdbcType=LONGVARCHAR}
    where ref = #{ref,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.study_system.model.UserActionLog" >
    update user_action_log
    set TYPE = #{type,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      c_time = #{cTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR}
    where ref = #{ref,jdbcType=BIGINT}
  </update>
</mapper>