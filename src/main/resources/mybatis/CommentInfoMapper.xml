<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.example.study_system.dao.CommentInfoMapper">
	<resultMap id="BaseResultMap"
		type="com.example.study_system.model.CommentInfo">
		<id column="ref" property="ref" jdbcType="BIGINT" />
		<result column="task_id" property="taskId" jdbcType="BIGINT" />
		<result column="comment_type" property="commentType"
			jdbcType="INTEGER" />
		<result column="comment_user_id" property="commentUserId"
			jdbcType="VARCHAR" />
		<result column="c_time" property="cTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.example.study_system.model.CommentInfo"
		extends="BaseResultMap">
		<result column="content" property="content"
			jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		ref, task_id, comment_type, comment_user_id, c_time
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from comment_info
		where ref = #{ref,jdbcType=BIGINT}
	</select>
	<select id="selectCommentByTaskId"
		resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
		select
		ref,task_id,content,comment_type,comment_user_id,c_time
		from comment_info
		where task_id = #{taskId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		comment_info
		where ref = #{ref,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.example.study_system.model.CommentInfo">
		insert into comment_info (ref, task_id, comment_type,
		comment_user_id, c_time, content
		)
		values (#{ref,jdbcType=BIGINT},
		#{taskId,jdbcType=BIGINT},
		#{commentType,jdbcType=INTEGER},
		#{commentUserId,jdbcType=VARCHAR}, #{cTime,jdbcType=TIMESTAMP},
		#{content,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.example.study_system.model.CommentInfo">
		insert into comment_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ref != null">
				ref,
			</if>
			<if test="taskId != null">
				task_id,
			</if>
			<if test="commentType != null">
				comment_type,
			</if>
			<if test="commentUserId != null">
				comment_user_id,
			</if>
			<if test="cTime != null">
				c_time,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ref != null">
				#{ref,jdbcType=BIGINT},
			</if>
			<if test="taskId != null">
				#{taskId,jdbcType=BIGINT},
			</if>
			<if test="commentType != null">
				#{commentType,jdbcType=INTEGER},
			</if>
			<if test="commentUserId != null">
				#{commentUserId,jdbcType=VARCHAR},
			</if>
			<if test="cTime != null">
				#{cTime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.example.study_system.model.CommentInfo">
		update comment_info
		<set>
			<if test="taskId != null">
				task_id = #{taskId,jdbcType=BIGINT},
			</if>
			<if test="commentType != null">
				comment_type = #{commentType,jdbcType=INTEGER},
			</if>
			<if test="commentUserId != null">
				comment_user_id = #{commentUserId,jdbcType=VARCHAR},
			</if>
			<if test="cTime != null">
				c_time = #{cTime,jdbcType=TIMESTAMP},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where ref = #{ref,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.example.study_system.model.CommentInfo">
		update comment_info
		set task_id =
		#{taskId,jdbcType=BIGINT},
		comment_type =
		#{commentType,jdbcType=INTEGER},
		comment_user_id =
		#{commentUserId,jdbcType=VARCHAR},
		c_time =
		#{cTime,jdbcType=TIMESTAMP},
		content = #{content,jdbcType=LONGVARCHAR}
		where ref = #{ref,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.example.study_system.model.CommentInfo">
		update comment_info
		set task_id =
		#{taskId,jdbcType=BIGINT},
		comment_type =
		#{commentType,jdbcType=INTEGER},
		comment_user_id =
		#{commentUserId,jdbcType=VARCHAR},
		c_time = #{cTime,jdbcType=TIMESTAMP}
		where ref = #{ref,jdbcType=BIGINT}
	</update>
</mapper>